[gd_resource type="MaterialShader" format=1]

[resource]

_code = { "fragment":"uniform color diffuse_color = color(1,1,1,1);\nuniform texture diffuse;\nuniform color specular_color = color(1,1,1,1);\nuniform texture specular;\n\nuniform color detail_color = color(1,1,1,1);\nuniform texture detail;\nuniform float detail_blend = 0;\nuniform vec2 detail_scale = vec2(1,1);\n\nvec4 t = tex(diffuse,UV);\nvec4 d = tex(detail,mod(UV*detail_scale,vec2(1,1)));\n\nDIFFUSE = mix(t.rgb * COLOR.rgb * diffuse_color.rgb,d.rgb * detail_color.rgb,detail_blend * d.a);\n\n\n\nSPECULAR = tex(specular,UV).rgb * specular_color.rgb;\nSPEC_EXP = tex(specular,UV).a * specular_color.a;", "fragment_ofs":0, "light":"uniform color rim_color = color(1,1,1,1);\nuniform float brightness = 0;\n\nuniform float diffuse_size = 1;\nuniform float diffuse_hardness = 10;\nuniform float diffuse_bands = 1;\n\nuniform float specular_size = 0.1;\nuniform float specular_hardness = 10;\nuniform float specular_bands = 1;\n\nuniform float rim_size = 0;\nuniform float rim_hardness = 10;\nuniform float rim_bands = 1;\n\nuniform bool limit_rim = false;\n\nuniform float band_strength = 1;\n\nfloat contrast(float v,float hardness, float bands){\n\tfloat c = (100+(hardness*100))/100;\n\tv += brightness;\n\tc *= c;\n\tv -= 0.5;\n\tv *= c;\n\tv += 0.5;\n\tv -= brightness;\n\tv = clamp(v,0,1);\n\t\n\tfloat b = 1+bands;\n\tif(b > 1){\n\t\tv = mix(v,(round(v*b)/b),band_strength);\n\t}\n\treturn v;\n}\n\n//DIFFUSE;\nfloat L = 0;\nif(diffuse_size > 0){\n\tfloat ls = 1/diffuse_size;\n\tL = pow(max(0,dot(LIGHT_DIR,NORMAL)),ls);\n\tL = contrast(L, diffuse_hardness, diffuse_bands);\n}\n\nLIGHT = LIGHT_DIFFUSE * DIFFUSE * L;\n\n//SPECULAR;\nfloat S = 0;\nif(specular_size > 0){\n\tvec3 halfvec = normalize(LIGHT_DIR + EYE_VEC);\n\tfloat ss = 1/specular_size;\n\tS = pow(max(0,dot(NORMAL,halfvec)),ss);\n\tS = contrast(S, specular_hardness, specular_bands);\n}\nif(L > 0){\n\tLIGHT += LIGHT_SPECULAR * SPECULAR * SPECULAR_EXP * S;\n}\n\n//RIM LIGHTING;\nS = 0;\nif(rim_size > 0){\n\tfloat rs = 1/rim_size;\n\tS = pow(1-dot(normalize(EYE_VEC),NORMAL),rs);\n}\nif(limit_rim){\n\tS *= dot(EYE_VEC,-LIGHT_DIR);\n}\nS = contrast(S, rim_hardness,rim_bands);\nLIGHT += mix(LIGHT, rim_color.rgb, rim_color.a) * S;", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

